version: 2

jobs:
  test:
    docker:
      - image: circleci/python:3.6.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:10.5-ram
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    steps:
      - checkout
      - restore_cache:
          key: deps-{{ checksum "requirements/local.txt" }}
      - run:
          name: Create virtualenv and install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/local.txt
            pip install codecov
      - save_cache:
          key: deps-{{ checksum "requirements/local.txt" }}
          paths:
            - "venv"
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          command: |
            . venv/bin/activate
            pytest --cov=. --capture=no --cov-config=.coveragerc
            codecov

  flake8:
    docker:
    - image: circleci/python:3.6.6
    steps:
    - checkout
    - run:
        name: Run flake8
        command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install flake8
          flake8 . --exclude=migrations,venv

workflows:
  version: 2
  test_and_static_analysys:
    jobs:
      - test
      - flake8
